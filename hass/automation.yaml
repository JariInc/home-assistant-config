- alias: Heating Update Thermostats
  mode: restart
  initial_state: true
  trigger:
    platform: state
    entity_id:
      - sensor.thermofloor_as_heatit_thermostat_tf_033_external_sensor
  action:
    service: python_script.heating_thermostat_update
    data:
      thermostat: climate.thermofloor_as_heatit_thermostat_tf_056_mode
      sensor: sensor.thermofloor_as_heatit_thermostat_tf_033_external_sensor

- alias: Disable side car heater
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.garage_side_socket_power
    below: 1
    for:
      minutes: 10
  action:
    - service: switch.turn_off
      entity_id: switch.car_heater_side
    - service: input_boolean.turn_off
      entity_id: input_boolean.car_heater_side_armed

- alias: Disable front cat heater
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.garage_front_socket_power
    below: 1
    for:
      minutes: 10
  action:
    - service: switch.turn_off
      entity_id: switch.car_heater_front
    - service: input_boolean.turn_off
      entity_id: input_boolean.car_heater_front_armed

- alias: Vestibule ceiling light
  mode: restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0xd0cf5efffe124b79_occupancy
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: 1
  action:
    - service: >
        {% if is_state('binary_sensor.0xd0cf5efffe124b79_occupancy', 'on') and is_state('sun.sun', 'below_horizon') %}
          light.turn_on
        {% else %}
          light.turn_off
        {% endif %}
      data:
        entity_id:
          - light.0x90fd9ffffeff2e13_light

- alias: Utility room LED strip
  mode: restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x00158d00034ce398_occupancy
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: 1
  action:
    - service: >
        {% if is_state('binary_sensor.0x00158d00034ce398_occupancy', 'on') and is_state('sun.sun', 'below_horizon') %}
          light.turn_on
        {% else %}
          light.turn_off
        {% endif %}
      data:
        entity_id: light.0x00124b001d43d764

- alias: Utility room ceiling
  mode: restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.shelly1_2c6915
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: 1
  action:
    - service: >
        {% if is_state('binary_sensor.shelly1_2c6915', 'on') %}
          light.turn_on
        {% else %}
          light.turn_off
        {% endif %}
      data:
        entity_id: light.0x90fd9ffffef1731a

- alias: Shower room LED strip
  mode: restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.shelly1_25abb7
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: 1
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.0x00124b001ba6bef4_light
        color_name: >
          {% if is_state('binary_sensor.shelly1_25abb7', 'on') %}
            red
          {% else %}
            blue
          {% endif %}
        brightness_pct: "{{ state_attr('switch.adaptive_lighting_shower_room_downlight', 'brightness_pct') | int }}"
    #- delay:
    #    seconds: 1
    #- service: light.turn_off
    #  data_template:
    #    entity_id: >
    #      {% if is_state('binary_sensor.shelly1_25abb7', 'off') %}
    #        light.0x00124b001ba6bef4_light
    #      {% else %}
    #        light.dummy
    #      {% endif %}

- alias: Shower room downlight
  mode: restart
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.shelly1_25a447
    - platform: homeassistant
      event: start
    - platform: time_pattern
      minutes: 1
  action:
    - service: >
        {% if is_state('binary_sensor.shelly1_25a447', 'on') %}
          light.turn_on
        {% else %}
          light.turn_off
        {% endif %}
      data:
        entity_id: light.shower_room_downlight

- alias: Occupancy changed
  trigger:
    - platform: state
      entity_id: input_select.occupancy_state
  action:
    - service: mqtt.publish
      data_template:
        topic: 'hvac/toshiba-63200289/occupancy_state'
        retain: true
        payload: "{{ states('input_select.occupancy_state') }}"

- alias: Occupancy changed to home
  trigger:
    platform: state
    entity_id: input_select.occupancy_state
    to: home
  action:
    - service: switch.turn_on
      entity_id: switch.0x000d6ffffee3cb28

- alias: Occupancy changed to away
  trigger:
    platform: state
    entity_id: input_select.occupancy_state
    to: away
  action:
    - service: switch.turn_off
      entity_id: switch.0x000d6ffffee3cb28

- alias: Occupancy changed to sleep
  trigger:
    platform: state
    entity_id: input_select.occupancy_state
    to: sleep
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.office_2
        temperature: 16

- alias: Occupancy button
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0003208915_click
      to: 'left'
    - platform: state
      entity_id: sensor.0x00158d0003208915_click
      to: 'right'
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.occupancy_state
        option: >
          {% if 'left' == trigger.to_state.state %}
            home
          {% elif 'right' == trigger.to_state.state %}
            away
          {% endif %}
    - service: notify.notify
      data:
        message: clear_notification
        data:
          tag: occupancy-notify

- alias: Occupancy to sleep in the evening
  trigger:
    platform: time
    at: "22:00:00"
  condition:
    condition: state
    entity_id: input_select.occupancy_state
    state: home
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.occupancy_state
      option: sleep

- alias: Occupancy to home on workday mornings
  trigger:
    platform: time
    at: "06:30:00"
  condition:
    - condition: state
      entity_id: input_select.occupancy_state
      state: sleep
    - condition: state
      entity_id: binary_sensor.workday
      state: 'on'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.occupancy_state
      option: home

- alias: Occupancy to home on holiday mornings
  trigger:
    platform: time
    at: "08:00:00"
  condition:
    - condition: state
      entity_id: input_select.occupancy_state
      state: sleep
    - condition: state
      entity_id: binary_sensor.workday
      state: 'off'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.occupancy_state
      option: home

- alias: Shower room drying
  trigger:
    - platform: state
      entity_id: input_select.occupancy_state
    - platform: numeric_state
      entity_id: sensor.shower_room_moisture
      below: 20
      for:
        minutes: 15
    - platform: numeric_state
      entity_id: sensor.shower_room_moisture
      above: 25
    - platform: event
      event_type:
        - timer.cancelled
        - timer.finished
        - timer.started
      event_data:
        entity_id: timer.shower_room_manual_heating
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermofloor_as_heatit_thermostat_tf_056_mode
        temperature: >
          {% if is_state('timer.shower_room_manual_heating', 'active') %}
            25
          {% else %}
            {% if states('sensor.shower_room_moisture') | float > 25 %}
              {% if states('sensor.0x00158d00036b1ad1_temperature') | float > 25 %}
                20
              {% else %}
                25
              {% endif %}
            {% else %}
              {% if is_state('input_select.occupancy_state', 'home') %}
                20
              {% else %}
                17
              {% endif %}
            {% endif %}
          {% endif %}

- alias: A person arrives to home
  trigger:
    - platform: state
      entity_id: group.any_persons
      from: not_home
      to: home
  condition:
    - condition: state
      entity_id: input_select.occupancy_state
      state: away
  action:
    - service: notify.notify
      data:
        message: Asetetaanko kotona-tilaan?
        data:
          tag: occupancy-notify
          sticky: 'true'
          actions:
            - action: occupancy_home
              title: Kyllä

- alias: All persons left home
  trigger:
    - platform: state
      entity_id: group.any_persons
      from: home
      to: not_home
  condition:
    - condition: state
      entity_id: input_select.occupancy_state
      state: home
  action:
    - service: notify.notify
      data:
        message: Asetetaanko poissa-tilaan?
        data:
          tag: occupancy-notify
          sticky: 'true'
          actions:
            - action: occupancy_away
              title: Kyllä

- alias: Set occupancy from mobile app
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: occupancy_home
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: occupancy_away
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: "{{ 'occupancy_home' == trigger.event.data.action }}"
      - condition: template
        value_template: "{{ 'occupancy_away' == trigger.event.data.action }}"
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.occupancy_state
        option: >
          {% if 'occupancy_home' == trigger.event.data.action %}
            home
          {% elif 'occupancy_away' == trigger.event.data.action %}
            away
          {% endif %}
    - service: notify.notify
      data:
        message: clear_notification
        data:
          tag: occupancy-notify

- alias: "Office turn off 3D printer"
  trigger:
    - platform: state
      entity_id: sensor.octoprint_current_state
      to: unknown
      for:
        minutes: 2
  action:
    - service: switch.turn_off
      entity_id: switch.0x000d6ffffedaafbf

- alias: 3D print finished
  trigger:
    - platform: state
      entity_id: binary_sensor.octoprint_printing
      from: 'on'
      to: 'off'
  action:
    - service: notify.mobile_app_lm_g710
      data:
        message: 3D tulostus valmis
        data:
          tag: 3d-print-done

# - alias: "Adaptive lighting: toggle 'sleep mode'"
#   trigger:
#     - platform: state
#       entity_id: input_select.occupancy_state
#     - platform: homeassistant
#       event: start  # in case the states aren't properly restored
#   variables:
#     sleep_mode: >
#       {% if is_state('input_select.occupancy_state', 'sleep') %}
#         on
#       {% else %}
#         off
#       {% endif %}
#   action:
#     service: "switch.turn_{{ sleep_mode }}"
#     entity_id:
#       - switch.adaptive_lighting_sleep_mode_vestibule
#       - switch.adaptive_lighting_sleep_mode_utility_room_floor
#       - switch.adaptive_lighting_sleep_mode_utility_room_ceiling
#       - switch.adaptive_lighting_sleep_mode_shower_room_led_strip
#       - switch.adaptive_lighting_sleep_mode_shower_room_downlight
