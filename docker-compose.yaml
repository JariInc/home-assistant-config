version: '3'
services:
  homeassistant:
    container_name: hass
    image: homeassistant/home-assistant:0.75.2
    env_file:
      - hass.env
    volumes:
      - ./config:/config
      - /etc/localtime:/etc/localtime:ro
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    restart: always
    ports:
      - "80:8123"
    networks:
      - hass
    depends_on:
      - mqtt

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:1.4.12
    restart: always
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/data
    ports:
      - "1883:1883"
    networks:
      - hass

  samba:
    container_name: samba
    image: dperson/samba
    networks:
      - samba
    volumes:
      - .:/share
    restart: always
    ports:
      - "139:139"
      - "445:445"
    command: -s "config;/share;no;no;no;${SMB_USER}" -u "${SMB_USER};${SMB_PASSWORD}"
    env_file:
      - samba.env

  duckdns:
    container_name: duckdns
    image: meltwater/duckdns:latest
    env_file:
      - duckdns.env
    restart: always

  duplicity:
    container_name: duplicity
    image: wernight/duplicity:latest
    env_file:
      - duplicity.env
    environment: 
      - 
    volumes:
      - .:/data:ro
    command: ["duplicity", "--full-if-older-than=1W", "--no-encryption", "--allow-source-mismatch", "--s3-use-rrs", "--s3-use-multiprocessing", "/data", "s3://${AWS_BACKUP_BUCKET}"]

  hvac-pid:
    container_name: hvac_pid
    build: ./hvac-pid
    env_file:
     - hvac-pid.env
    networks:
      - hass
    restart: always
    depends_on:
      - mqtt
      - homeassistant

  influxdb:
    container_name: influxdb
    image: influxdb:1.5.4-alpine
    volumes:
      - ./influxdb/data:/var/lib/influxdb
    networks:
      - hass
    restart: always
    ports:
      - "8086:8086"
    env_file:
     - influxdb.env

  # telegraf:
  #   image: telegraf:1.5.3-alpine
  #   container_name: telegraf
  #   links:
  #     - influxdb
  #   volumes:
  #     - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  mqtt-influxdb:
    container_name: mqtt-influxdb
    build: ./mqtt-influxdb
    env_file: ./mqtt-influxdb.env
    networks:
      - hass
    restart: always
    depends_on:
      - mqtt
      - influxdb
    
  grafana:
    container_name: grafana
    image: grafana/grafana:5.2.2
    env_file: ./grafana.env
    ports: 
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - hass
    restart: always
    depends_on:
      - influxdb

  keberos-cam1:
    # rtsp://admin:asdfasdf12@192.168.1.141/Streaming/channels/1/
    container_name: keberos-cam1
    image: kerberos/kerberos:latest
    ports:
      - "8000:80"
      - "8889:8889"
    volumes:
      - ./keberos/cam1:/environments
    networks:
      - hass

networks:
  hass:
  samba:
