# temperature
- platform: mqtt
  state_topic: "ruuvitag/C316F66C57EB"
  name: ruuvitag_indoor_temperature
  unit_of_measurement: "°C"
  value_template: '{{ value_json.temperature }}'
- platform: mqtt
  state_topic: "ruuvitag/DC136ADEF844"
  name: ruuvitag_outdoor_temperature
  unit_of_measurement: "°C"
  value_template: '{{ value_json.temperature }}'
- platform: mqtt
  state_topic: "ruuvitag/F53C10BAF234"
  name: ruuvitag_oven_temperature
  unit_of_measurement: "°C"
  value_template: '{{ value_json.temperature }}'
- platform: mqtt
  state_topic: "bme280/8EB850"
  name: bokashi_temperature
  unit_of_measurement: "°C"
  value_template: '{{ value_json.temperature }}'
- platform: mqtt
  state_topic: "bme280/8EB9F9"
  name: sauna_temperature
  unit_of_measurement: "°C"
  value_template: '{{ value_json.temperature }}'

# humidity
- platform: mqtt
  state_topic: "ruuvitag/C316F66C57EB"
  name: ruuvitag_indoor_humidity
  unit_of_measurement: "%"
  value_template: '{{ value_json.humidity }}'
- platform: mqtt
  state_topic: "ruuvitag/DC136ADEF844"
  name: ruuvitag_outdoor_humidity
  unit_of_measurement: "%"
  value_template: '{{ value_json.humidity }}'
- platform: mqtt
  state_topic: "bme280/8EB9F9"
  name: sauna_humidity
  unit_of_measurement: "%"
  value_template: '{{ value_json.humidity }}'

# dew point
- platform: influxdb
  host: influxdb
  username: !env_var INFLUXDB_USERNAME
  password : !env_var INFLUXDB_PASSWORD
  queries:
    - name: ruuvitag_indoor_dewpoint
      unit_of_measurement: °C
      value_template: '{{ value | round(1) }}'
      group_function: last
      where: '"sensor" = ''C316F66C57EB'''
      measurement: environment
      field: dew_point
      database: ruuvitag

# tasmota
- platform: mqtt
  name: garage_side_socket_power
  state_topic: "tele/garage-side-socket/SENSOR"
  value_template: '{{ value_json["ENERGY"]["Power"] }}'
  unit_of_measurement: "W"

- platform: mqtt
  name: garage_front_socket_power
  state_topic: "tele/garage-front-socket/SENSOR"
  value_template: '{{ value_json["ENERGY"]["Power"] }}'
  unit_of_measurement: "W"

# octopi
- platform: template
  sensors:
    octoprint_time_elapsed_format:
      friendly_name: 'Printing Time Elapsed'
      value_template: >-
        {% set etime = states.sensor.octoprint_time_elapsed.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 päivä
          {%- else -%}
            {{ days }} päivää
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 tunti
          {%- else -%}
            {{ hours }} tuntia
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minuutti
          {%- else -%}
            {{ minutes }} minuuttia
          {%- endif -%}
        {%- endif -%}
    octoprint_time_remaining_format:
      friendly_name: 'Printing Time Remaining'
      value_template: >-
        {% set rtime = states.sensor.octoprint_time_remaining.state | int %}
        {% set seconds = rtime % 60 %}
        {% set minutes = ((rtime % 3600) / 60) | int %}
        {% set hours = ((rtime % 86400) / 3600) | int %}
        {% set days = (rtime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 päivä
          {%- else -%}
            {{ days }} päivää
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 tunti
          {%- else -%}
            {{ hours }} tuntia
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minuutti
          {%- else -%}
            {{ minutes }} minuuttia
          {%- endif -%}
        {%- endif -%}

# heatpump pid
- platform: mqtt
  name: heatpump_set_temperature
  state_topic: "hvac/toshiba-63200289/pid/state"
  value_template: '{{ value_json["temperature_set"] }}'
  unit_of_measurement: "°C"
- platform: mqtt
  name: heatpump_fan_speed
  state_topic: "hvac/toshiba-63200289/pid/state"
  value_template: '{{ value_json["fan"] }}'

# Google Maps
# - platform: rest
#   resource: !env_var HOME_TO_OULU_URL
#   name: home_to_oulu
#   value_template: '{{ value_json.rows[0].elements[0].duration_in_traffic.value }}'
#   method: GET
#   verify_ssl: true
#   unit_of_measurement: seconds
#   scan_interval: 300
# - platform: rest
#   resource: !env_var OULU_TO_HOME_URL
#   name: oulu_to_home
#   value_template: '{{ value_json.rows[0].elements[0].duration_in_traffic.value }}'
#   method: GET
#   verify_ssl: true
#   unit_of_measurement: seconds
#   scan_interval: 300

# Sparsnas
- platform: mqtt
  state_topic: sparsnas/667076
  name: sparsnas_power
  unit_of_measurement: "W"
  value_template: '{{ value_json.Watt | round(1) }}'
  icon: mdi:flash-circle
- platform: mqtt
  state_topic: sparsnas/667076
  name: sparsnas_energy
  unit_of_measurement: "kWh"
  value_template: '{{ value_json.kWh | round(3) }}'
  icon: mdi:flash-circle
